{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\joaop\\\\Desktop\\\\NWL5\\\\podcastrr\\\\src\\\\contexts\\\\PlayerContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerContextProvider, \"YVK/pyQj2lhHgLmg4FMG0eROz7Q=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["C:/Users/joaop/Desktop/NWL5/podcastrr/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","togglePlay","setPlayingState","state"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAoBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAIP,OAAO,SAASG,qBAAT,OAA8C;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBAEXH,QAAQ,CAAC,EAAD,CAFG;AAAA,MAE3CI,WAF2C;AAAA,MAE9BC,cAF8B;;AAAA,mBAGKL,QAAQ,CAAC,CAAD,CAHb;AAAA,MAG3CM,mBAH2C;AAAA,MAGtBC,sBAHsB;;AAAA,mBAIfP,QAAQ,CAAC,KAAD,CAJO;AAAA,MAI3CQ,SAJ2C;AAAA,MAIhCC,YAJgC;;AAMnD,WAASC,IAAT,CAAcC,OAAd,EAAuB;AACrBN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,UAAT,GAAsB;AACpBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASK,eAAT,CAAyBC,KAAzB,EAAyC;AACvCL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACD;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAG;AAAEV,MAAAA,WAAW,EAAXA,WAAF;AAAeE,MAAAA,mBAAmB,EAAnBA,mBAAf;AAAoCI,MAAAA,IAAI,EAAJA,IAApC;AAA0CF,MAAAA,SAAS,EAATA,SAA1C;AAAqDI,MAAAA,UAAU,EAAVA,UAArD;AAAiEC,MAAAA,eAAe,EAAfA;AAAjE,KAAhC;AAAA,cACGV;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState } from 'react';\r\n\r\ntype Episode = {\r\n  title: string;\r\n  members: string;\r\n  thumbnail: string;\r\n  duration: number;\r\n  url: string;\r\n};\r\n\r\n\r\ntype PlayerContextData = {\r\n  episodeList: Episode[];\r\n  currentEpisodeIndex: number;\r\n  isPlaying: boolean;\r\n  play: (episode: Episode) => void;\r\n  togglePlay: () => void;\r\n  setPlayingState: (state: boolean) => void;\r\n};\r\n\r\nexport const PlayerContext = createContext({} as PlayerContextData); \r\n\r\n\r\n\r\nexport function PlayerContextProvider( { children }) {\r\n\r\n  const [ episodeList, setEpisodeList ] = useState([]);\r\n  const [ currentEpisodeIndex, setCurrentEpisodeIndex ] = useState(0);\r\n  const [ isPlaying, setIsPlaying ] = useState(false);\r\n\r\n  function play(episode) {\r\n    setEpisodeList([episode])\r\n    setCurrentEpisodeIndex(0);\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  function togglePlay() {\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  function setPlayingState(state: boolean) {\r\n    setIsPlaying(state);\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider value={ { episodeList, currentEpisodeIndex, play, isPlaying, togglePlay, setPlayingState}}>\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}