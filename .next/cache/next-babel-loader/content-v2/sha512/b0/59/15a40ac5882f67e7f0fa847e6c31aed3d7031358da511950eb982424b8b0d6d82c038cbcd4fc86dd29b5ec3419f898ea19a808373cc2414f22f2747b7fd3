{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\joaop\\\\Desktop\\\\NWL5\\\\podcastrr\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport { api } from '../../services/api';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 //24 horas\n\n  };\n};","map":{"version":3,"sources":["C:/Users/joaop/Desktop/NWL5/podcastrr/src/pages/episodes/[slug].tsx"],"names":["api","format","parseISO","ptBR","convertDurationToTimeString","Episode","episode","title","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","url","props","revalidate"],"mappings":";;AAEA,SAASA,GAAT,QAAoB,oBAApB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAkBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4C;AACzD,sBACE;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMf,GAAG,CAACgB,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAMP,OAAO,GAAG;AACdW,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADK;AAEdV,IAAAA,KAAK,EAAEQ,IAAI,CAACR,KAFE;AAGdW,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHF;AAIdC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJA;AAKdC,IAAAA,WAAW,EAAEnB,MAAM,CAACC,QAAQ,CAACa,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAC3DC,MAAAA,MAAM,EAAEnB;AADmD,KAA1C,CALL;AAQdoB,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CARF;AASdG,IAAAA,gBAAgB,EAAEtB,2BAA2B,CAACoB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CAAP,CAT/B;AAUdI,IAAAA,GAAG,EAAEZ,IAAI,CAACU,IAAL,CAAUE;AAVD,GAAhB;AAgBA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAEtB,MAAAA;AAAF,KADF;AAELuB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAFjB,CAEqB;;AAFrB,GAAP;AAID,CAzBM","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router'\r\nimport { api } from '../../services/api';\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\ntype Episode = { \r\n  id: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  members: string;\r\n  duration: number;\r\n  durationAsString: string;\r\n  url: string;\r\n  publishedAt: string;\r\n  description: string;\r\n}\r\n\r\ntype EpisodeProps = {\r\n  episode: Episode;\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps) {\r\n  return (\r\n    <h1>{episode.title}</h1>\r\n  )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  return {\r\n    paths: [],\r\n    fallback: 'blocking',\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n  const { slug } = ctx.params;\r\n\r\n  const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n  const episode = {\r\n    id: data.id,\r\n    title: data.title,\r\n    thumbnail: data.thumbnail,\r\n    members: data.members,\r\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { \r\n      locale: ptBR\r\n    }),\r\n    duration: Number(data.file.duration),\r\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n    url: data.file.url,\r\n  };\r\n  \r\n\r\n\r\n\r\n  return {\r\n    props: { episode },\r\n    revalidate: 60 * 60 * 24, //24 horas\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}