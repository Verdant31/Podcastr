{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\joaop\\\\Desktop\\\\NWL5\\\\podcastrr\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["C:/Users/joaop/Desktop/NWL5/podcastrr/src/pages/episodes/[slug].tsx"],"names":["Episode","episode","title"],"mappings":";;;AAuBA,eAAe,SAASA,OAAT,OAA4C;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AACzD,sBACE;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;KAJuBF,O","sourcesContent":["import { GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router'\r\nimport { api } from '../../services/api';\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\ntype Episode = { \r\n  id: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  members: string;\r\n  duration: number;\r\n  durationAsString: string;\r\n  url: string;\r\n  publishedAt: string;\r\n  description: string;\r\n}\r\n\r\ntype EpisodeProps = {\r\n  episode: Episode;\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps) {\r\n  return (\r\n    <h1>{episode.title}</h1>\r\n  )\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n  const { slug } = ctx.params;\r\n\r\n  const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n  const episode = {\r\n    id: data.id,\r\n    title: data.title,\r\n    thumbnail: data.thumbnail,\r\n    members: data.members,\r\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { \r\n      locale: ptBR\r\n    }),\r\n    duration: Number(data.file.duration),\r\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n    url: data.file.url,\r\n  };\r\n  \r\n\r\n\r\n\r\n  return {\r\n    props: { episode },\r\n    revalidate: 60 * 60 * 24, //24 horas\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}